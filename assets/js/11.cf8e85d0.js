(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{436:function(t,s,a){"use strict";a.r(s);var e=a(65),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"adachi-plugin-开发者文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adachi-plugin-开发者文档"}},[t._v("#")]),t._v(" Adachi-Plugin 开发者文档")]),t._v(" "),a("h2",{attrs:{id:"注册插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册插件"}},[t._v("#")]),t._v(" 注册插件")]),t._v(" "),a("p",[a("code",[t._v("插件(Plugin)")]),t._v(" 是由开发者创建的 "),a("code",[t._v("指令(Command)")]),t._v(" 的集合。注册插件只需要在 "),a("code",[t._v("/src/plugins")]),t._v(" 目录下创建一个文件夹，然后完成「声明」和「实现」两个步骤。")]),t._v(" "),a("h3",{attrs:{id:"声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[t._v("#")]),t._v(" 声明")]),t._v(" "),a("p",[t._v("声明插件只需在上文提到的文件夹中创建一个名为 "),a("code",[t._v("init.ts")]),t._v(" 的文件，文件的格式如下：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /src/plugins/example/init.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PluginSetting "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@modules/plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" OrderConfig "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@modules/command"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" echo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" OrderConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    cmdKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"silvery-star.echo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    desc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"复读"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[任意内容]"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    regexps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".+"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不可 default 导出，函数名固定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PluginSetting"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        pluginName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        cfgList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" echo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\towner"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Extrwave"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\trepoName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Adachi-Example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这是一个最简单的声明插件的例子，它声明了一个名为 "),a("code",[t._v("example")]),t._v(" 的插件，")]),t._v(" "),a("p",[t._v("同时定义了一个用于复读消息的 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#order",target:"_blank",rel:"noopener noreferrer"}},[t._v("Order类型"),a("OutboundLink")],1),t._v(" 指令，下面我们来实现这个插件。")]),t._v(" "),a("p",[t._v("并且指定了插件仓库地址，可以是实现在线更新")]),t._v(" "),a("h3",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),a("p",[t._v("每个指令都可以配置一个可选的 "),a("code",[t._v("main")]),t._v(" 属性，表示实现这个指令的文件位置，或实现指令的函数，它的缺省值为 "),a("code",[t._v("index")]),t._v(" ，即在 "),a("code",[t._v("init.ts")]),t._v(" 的同一目录下的 "),a("code",[t._v("index.ts")]),t._v(" 文件中实现，文件的格式如下：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /src/plugins/example/index.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" InputParameter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@modules/command"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不可 default 导出，函数名固定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" InputParameter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("messageData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如此就可以非常简单的实现一个 "),a("code",[t._v("echo")]),t._v(" 指令复读的功能。")]),t._v(" "),a("p",[t._v("其中 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#inputparameter",target:"_blank",rel:"noopener noreferrer"}},[t._v("InputParameter"),a("OutboundLink")],1),t._v(" 是 "),a("code",[t._v("main")]),t._v(" 函数的入参对象，负责提供实现指令时可能需要使用到的工具和数据。")]),t._v(" "),a("p",[t._v("在此基础上，你可以通过下面提供的工具来实现功能各异的插件。")]),t._v(" "),a("h2",{attrs:{id:"global"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global"}},[t._v("#")]),t._v(" Global")]),t._v(" "),a("h3",{attrs:{id:"bot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bot"}},[t._v("#")]),t._v(" BOT")]),t._v(" "),a("p",[a("code",[t._v("BOT")]),t._v(" 是 "),a("code",[t._v("Adachi-GBOT")]),t._v(" 中定义全局工具类的接口，它被定义为：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BOT")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Database"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BotConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" client"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IOpenAPI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" logger"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FileManagement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" auth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Authorization"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MsgManagement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" command"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" refresh"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RefreshConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" renderer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BasicRenderer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("每个工具类的含义和包含的方法都会在后文中进行一一介绍。")]),t._v(" "),a("p",[t._v("这个接口实例整体会被传入 "),a("code",[t._v("init()")]),t._v(" ，你可以通过 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#%E8%A7%A3%E6%9E%84%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("解构对象 "),a("OutboundLink")],1),t._v("的方式来获取其中的某个工具，以便进行声明插件的准备工作，如创建配置文件等。在代码的其他地方，你也可以通过下面的代码导入所有工具类。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ROOT"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"userid类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#userid类型"}},[t._v("#")]),t._v(" "),a("code",[t._v("UserID")]),t._v("类型")]),t._v(" "),a("p",[t._v("由原先QQ号  "),a("code",[t._v("number")]),t._v("改成了频道用户ID  "),a("code",[t._v("string")])]),t._v(" "),a("h3",{attrs:{id:"inputparameter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputparameter"}},[t._v("#")]),t._v(" InputParameter")]),t._v(" "),a("p",[t._v("指令实现的入参对象，被定义为：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputParameter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sendMessage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SendFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    messageData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    matchResult"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MatchResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BOT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 其中监听到消息的类型 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    eventType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    eventId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        author"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            avatar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            bot"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        channel_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        direct_message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        guild_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        member"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            joined_at"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        timestamp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"commandfunc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commandfunc"}},[t._v("#")]),t._v(" "),a("code",[t._v("CommandFunc")])]),t._v(" "),a("p",[t._v("实际上，"),a("code",[t._v("main")]),t._v(" 函数是这样被定义的：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandFunc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" InputParameter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("换言之，在实现插件的函数内，你除了能获取所有的工具类，还能得到消息回复函数、消息事件数据和正则匹配结果。")]),t._v(" "),a("h2",{attrs:{id:"messagescope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#messagescope"}},[t._v("#")]),t._v(" MessageScope")]),t._v(" "),a("p",[t._v("指令作用域，表示某条指令的可被触发范围，被定义为：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" MessageScope "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Neither"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Guild "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Private "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Both "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Guild "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Private\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"authlevel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#authlevel"}},[t._v("#")]),t._v(" AuthLevel")]),t._v(" "),a("p",[t._v("权限等级，被定义为：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" AuthLevel "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tBanned"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tGuildManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tGuildOwner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tMaster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("其中，"),a("code",[t._v("User")]),t._v(" 是默认权限等级；"),a("code",[t._v("Master")]),t._v(" 是持有者，最高权限等级。")]),t._v(" "),a("h2",{attrs:{id:"command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[t._v("#")]),t._v(" Command")]),t._v(" "),a("p",[t._v("事实上，指令才是 "),a("code",[t._v("Adachi-BOT")]),t._v(" 设计中的「第一公民」。出于简化指令实现代码，强化用户配置的考虑，我们暂时将指令分为以下三种："),a("code",[t._v("命令式(Order)")]),t._v(" 、 "),a("code",[t._v("开关式(Switch)")]),t._v(" 和 "),a("code",[t._v("询问式(Enquire)")]),t._v(" 。")]),t._v(" "),a("h3",{attrs:{id:"commandinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commandinfo"}},[t._v("#")]),t._v(" CommandInfo")]),t._v(" "),a("p",[a("code",[t._v("CommandInfo")]),t._v(" 表示了所有类型指令的公用配置属性，它的定义如下：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Required"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("\n    Optional"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BasicConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cmdKey"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CommandFunc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这或许有些抽象，我们可以将其展开：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cmdKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    desc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    detail"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    auth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AuthLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    scope"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MessageScope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ignoreCase"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CommandFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"cmdkey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmdkey"}},[t._v("#")]),t._v(" "),a("code",[t._v("cmdKey")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string")]),t._v("类型。表示指令的 "),a("code",[t._v("key")]),t._v(" 值，唯一指定，用于区分不同的指令。该值应简记为 "),a("code",[t._v("开发者.指令功能")]),t._v(" 或 "),a("code",[t._v("插件名.指令功能")]),t._v(" ，点号两侧均应使用 "),a("code",[t._v("kebab-case")]),t._v(" ，如："),a("code",[t._v("silvery-star.uid-query")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"desc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#desc"}},[t._v("#")]),t._v(" "),a("code",[t._v("desc")])]),t._v(" "),a("p",[t._v("必填字段，"),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("string, string "),a("OutboundLink")],1),t._v("类型。为对指令的基本描述。"),a("code",[t._v("desc[0]")]),t._v(" 应为对指令作用的简短描述，四字最佳；"),a("code",[t._v("desc[1]")]),t._v(" 应为指令的参数列表，视指令类型不同用不同的形式。")]),t._v(" "),a("h4",{attrs:{id:"detail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#detail"}},[t._v("#")]),t._v(" "),a("code",[t._v("detail")])]),t._v(" "),a("p",[t._v("选填字段，"),a("code",[t._v("string")]),t._v("类型，缺省值为 "),a("code",[t._v('"该指令暂无更多信息"')]),t._v(" 。表示指令详细内容，当用户使用 "),a("code",[t._v("adachi.detail")]),t._v(" 指令时将返回此字段。")]),t._v(" "),a("h4",{attrs:{id:"auth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auth"}},[t._v("#")]),t._v(" "),a("code",[t._v("auth")])]),t._v(" "),a("p",[t._v("选填字段，"),a("a",{attrs:{href:"https://docs.adachi.top/developer/#authlevel",target:"_blank",rel:"noopener noreferrer"}},[t._v("AuthLevel"),a("OutboundLink")],1),t._v(" 类型，缺省值为 "),a("code",[t._v("AuthLevel.User")]),t._v(" 。表示允许使用该指令的最低权限。设置为 "),a("code",[t._v("AuthLevel.Banned")]),t._v(" 时无效，被封禁用户无法使用任何指令。")]),t._v(" "),a("h4",{attrs:{id:"scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[t._v("#")]),t._v(" "),a("code",[t._v("scope")])]),t._v(" "),a("p",[t._v("选填字段，"),a("a",{attrs:{href:"https://docs.adachi.top/developer/#messagescope",target:"_blank",rel:"noopener noreferrer"}},[t._v("MessageScope"),a("OutboundLink")],1),t._v(" 类型，缺省值为 "),a("code",[t._v("MessageScope.Both")]),t._v(" 。表示允许使用该指令的位置。")]),t._v(" "),a("h4",{attrs:{id:"display"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display"}},[t._v("#")]),t._v(" "),a("code",[t._v("display")])]),t._v(" "),a("p",[t._v("选填字段，"),a("code",[t._v("boolean")]),t._v(" 类型，缺省值为 "),a("code",[t._v("true")]),t._v(" 。表示是否在 "),a("code",[t._v("adachi.help")]),t._v(" 返回内容中显示此指令。")]),t._v(" "),a("h4",{attrs:{id:"ignorecase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignorecase"}},[t._v("#")]),t._v(" "),a("code",[t._v("ignoreCase")])]),t._v(" "),a("p",[t._v("选填字段，"),a("code",[t._v("boolean")]),t._v(" 类型，缺省值为 "),a("code",[t._v("true")]),t._v(" 。表示正则匹配是否忽略大小写。")]),t._v(" "),a("h4",{attrs:{id:"main"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main"}},[t._v("#")]),t._v(" "),a("code",[t._v("main")])]),t._v(" "),a("p",[t._v("选填字段，"),a("code",[t._v("string")]),t._v("或 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#commandfunc",target:"_blank",rel:"noopener noreferrer"}},[t._v("CommandFunc"),a("OutboundLink")],1),t._v(" 类型，缺省值为 "),a("code",[t._v('"index"')]),t._v(" 。表示指令入口。")]),t._v(" "),a("h3",{attrs:{id:"order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[t._v("#")]),t._v(" Order")]),t._v(" "),a("p",[t._v("命令式指令。将指令分为「指令头」和「指令参数」两个部分，其中「指令头」用于区分不同的指令，「指令参数」用于进行功能的实现。它的定义如下：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommandInfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    regexps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    start"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" "),a("code",[t._v("type")])]),t._v(" "),a("p",[t._v("固定字段。")]),t._v(" "),a("h4",{attrs:{id:"headers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#headers"}},[t._v("#")]),t._v(" "),a("code",[t._v("headers")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string[]")]),t._v("类型。表示该指令的所有指令头，可由用户配置。所有的指令头前都会被添加上用户在 "),a("code",[t._v("setting.yml")]),t._v(" 中配置的 "),a("code",[t._v("header")]),t._v(" 属性，如果你想忽略它，请在你的指令头前添加双下划线 "),a("code",[t._v("__")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"regexps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexps"}},[t._v("#")]),t._v(" "),a("code",[t._v("regexps")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string[]")]),t._v("或"),a("code",[t._v("string[][]")]),t._v("类型。表示该指令的所有正则匹配，不可由用户配置。该字段可以表示为一维或二维字符串数组，它们的含义分别是：")]),t._v(" "),a("ul",[a("li",[t._v("一维数组时，表示一个正则表达式。数组由「正则匹配单元」组成，如 "),a("code",[t._v('[ "(add|rem)", "\\\\d+" ]')]),t._v(" ，在生成最终的正则表达式时，该指令头和该数组的所有元素被拼接起来，如 "),a("code",[t._v("/#example *(add|rem) *\\d+/")]),t._v(" 。")]),t._v(" "),a("li",[t._v("二维数组时，表示若干个正则表达式。数组由上一点提到的一维数组组成。")])]),t._v(" "),a("h4",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[t._v("#")]),t._v(" "),a("code",[t._v("start")])]),t._v(" "),a("p",[t._v("选填字段，"),a("code",[t._v("boolean")]),t._v(" 类型，缺省值为 "),a("code",[t._v("true")]),t._v(" 。表示是否要在最终正则表达式前添加 "),a("code",[t._v("^")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" "),a("code",[t._v("stop")])]),t._v(" "),a("p",[t._v("选填字段，"),a("code",[t._v("boolean")]),t._v(" 类型，缺省值为 "),a("code",[t._v("true")]),t._v(" 。表示是否要在最终正则表达式后添加 "),a("code",[t._v("$")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"desc-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#desc-1"}},[t._v("#")]),t._v(" "),a("code",[t._v("desc[1]")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string")]),t._v("类型。表示指令的参数列表，"),a("code",[t._v("Order")]),t._v(" 型指令中，其中必填参数用 "),a("code",[t._v("[]")]),t._v(" 包裹，选填参数用 "),a("code",[t._v("()")]),t._v(" 包裹，如 "),a("code",[t._v('"r(次数)d[面数]k(前k大)"')]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"messagedate-msg-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#messagedate-msg-content"}},[t._v("#")]),t._v(" "),a("code",[t._v("messageDate.msg.content")])]),t._v(" "),a("p",[t._v("该值将会被去除指令头。注意，"),a("code",[t._v("ignoreCase")]),t._v(" 设置为 "),a("code",[t._v("true")]),t._v(" 时，"),a("code",[t._v("content")]),t._v(" 将为全小写字符串。")]),t._v(" "),a("h4",{attrs:{id:"ordermatchresult"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ordermatchresult"}},[t._v("#")]),t._v(" "),a("code",[t._v("OrderMatchResult")])]),t._v(" "),a("p",[a("code",[t._v("Order")]),t._v(" 型指令，匹配成功后将返回给 "),a("code",[t._v("main")]),t._v(" 函数匹配到的「指令头」。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderMatchResult")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"switch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[t._v("#")]),t._v(" Switch")]),t._v(" "),a("p",[t._v("开关式指令。这是「命令式指令」的一类特化。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SwitchConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommandInfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"switch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    onKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    offKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"single"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"divided"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    start"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"type-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("type")])]),t._v(" "),a("p",[t._v("固定字段。")]),t._v(" "),a("h4",{attrs:{id:"onkey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onkey"}},[t._v("#")]),t._v(" "),a("code",[t._v("onKey")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string")]),t._v(" 类型。表示指令状态为「开」的关键词。")]),t._v(" "),a("h4",{attrs:{id:"offkey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offkey"}},[t._v("#")]),t._v(" "),a("code",[t._v("offKey")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string")]),t._v("类型。表示指令状态为「关」的关键词。")]),t._v(" "),a("h4",{attrs:{id:"header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[t._v("#")]),t._v(" "),a("code",[t._v("header")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string")]),t._v("类型。表示该指令的唯一指令头，可由用户配置。指令头前都会被添加上用户在 "),a("code",[t._v("setting.yml")]),t._v(" 中配置的 "),a("code",[t._v("header")]),t._v(" 属性，如果你想忽略它，请在你的指令头前添加双下划线 "),a("code",[t._v("__")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode"}},[t._v("#")]),t._v(" "),a("code",[t._v("mode")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v('["single" | "divided" ]')]),t._v("类型。表示开关类指令的构成模式。")]),t._v(" "),a("ul",[a("li",[t._v("设置为 "),a("code",[t._v("single")]),t._v(" 时，表示单指令头模式。开/关关键词将被 "),a("code",[t._v("|")]),t._v(" 连接作为可选单元，最终被组装为形如 "),a("code",[t._v("header (on|off)")]),t._v(" 的表达式。")]),t._v(" "),a("li",[t._v("设置为 "),a("code",[t._v("divided")]),t._v(" 时，表示拆分指令头模式。此时 "),a("code",[t._v("header")]),t._v(" 配置将被忽略，开关关键词将作为 "),a("code",[t._v("header")]),t._v(" ，最终将被组装为形如 "),a("code",[t._v("(onKey|offKey) prams")]),t._v(" 的表达式。")])]),t._v(" "),a("h4",{attrs:{id:"regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp"}},[t._v("#")]),t._v(" "),a("code",[t._v("regexp")])]),t._v(" "),a("p",[t._v("必填字段，"),a("code",[t._v("string")]),t._v("或 [string"),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#arrays",target:"_blank",rel:"noopener noreferrer"}},[t._v("] "),a("OutboundLink")],1),t._v("类型。表示匹配的正则表达式不可由用户配置。该字段可以表示为字符串或一维字符串数组，它们的含义分别是：")]),t._v(" "),a("ul",[a("li",[t._v("字符串时，表示完整的表达式，将被直接拼接到指令头上。")]),t._v(" "),a("li",[t._v("一维数组时，同 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#regexps",target:"_blank",rel:"noopener noreferrer"}},[t._v("Order"),a("OutboundLink")],1),t._v(" 指令中的 "),a("code",[t._v("regexps")]),t._v(" 的一维数组清空。")])]),t._v(" "),a("p",[t._v("特别的，"),a("code",[t._v("Switch")]),t._v(" 指令还允许你在正则表达式中使用 "),a("code",[t._v("#{OPT}")]),t._v(" 来标识开/关关键词的位置，如 "),a("code",[t._v('[ "#{OPT}", "\\\\d+" ]')]),t._v(" ，这将导出如 "),a("code",[t._v("/#calc (add|sub) \\d+/")]),t._v(" 的指令。"),a("code",[t._v("#{OPT}")]),t._v(" 标识在 "),a("code",[t._v("divided")]),t._v(" 模式中不生效。")]),t._v(" "),a("h4",{attrs:{id:"start-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("start")])]),t._v(" "),a("p",[t._v("同 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#start",target:"_blank",rel:"noopener noreferrer"}},[t._v("Order - start"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"stop-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("stop")])]),t._v(" "),a("p",[t._v("同 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#stop",target:"_blank",rel:"noopener noreferrer"}},[t._v("Order - stop"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"desc-1-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#desc-1-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("desc[1]")])]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("Switch")]),t._v(" 类型中的指令描述中，你也可以使用 "),a("code",[t._v("#{OPT}")]),t._v(" 来标识开/关关键词的位置。同样，该标识在 "),a("code",[t._v("divided")]),t._v(" 模式中不生效。")]),t._v(" "),a("h4",{attrs:{id:"switchmatchresult"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switchmatchresult"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwitchMatchResult")])]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SwitchMatchResult")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"switch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    match"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isOn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("Switch")]),t._v(" 型指令，匹配成功后将返回给 "),a("code",[t._v("main")]),t._v(" 函数匹配到的关键词 "),a("code",[t._v("switch")]),t._v(" ，关键词是否为 "),a("code",[t._v("onKey")]),t._v(" 的函数 "),a("code",[t._v("isOn")]),t._v(" 和剩余匹配结果列表 "),a("code",[t._v("match")]),t._v(" 。")]),t._v(" "),a("h3",{attrs:{id:"enquire"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enquire"}},[t._v("#")]),t._v(" Enquire")]),t._v(" "),a("p",[t._v("询问式指令。支持类似正常说话类型的指令解构。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegUnit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    senDesc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnquireConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommandInfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enquire"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sentences"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    definedPair"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RegUnit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"type-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-3"}},[t._v("#")]),t._v(" "),a("code",[t._v("type")])]),t._v(" "),a("p",[t._v("固定字段。")]),t._v(" "),a("h4",{attrs:{id:"sentences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sentences"}},[t._v("#")]),t._v(" "),a("code",[t._v("sentences")])]),t._v(" "),a("p",[t._v("必填字段，"),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#arrays",target:"_blank",rel:"noopener noreferrer"}},[t._v("string[]"),a("OutboundLink")],1),t._v("类型。表示「询问句式」。")]),t._v(" "),a("h4",{attrs:{id:"definedpair"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#definedpair"}},[t._v("#")]),t._v(" "),a("code",[t._v("definedPair")])]),t._v(" "),a("p",[t._v("必填字段，"),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type",target:"_blank",rel:"noopener noreferrer"}},[t._v("Record "),a("OutboundLink")],1),t._v("<string, RegUnit> 类型。表示「句式单元」。这是 "),a("code",[t._v("Enquire")]),t._v(" 类型指令的核心部分，通过开发者定义变量名和获取变量的正则表达式，来加强指令的可配置性。一个「句式单元」的组成如下：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("camelCase")]),t._v(" 的 "),a("code",[t._v("string")]),t._v(" 类型变量作为 "),a("code",[t._v("key")]),t._v(" ，这个 "),a("code",[t._v("key")]),t._v(" 将被转化为 "),a("code",[t._v("SNAKE_CASE")]),t._v(" 用于「询问句式」中，并被 "),a("code",[t._v("#{}")]),t._v(" 包裹，例如 "),a("code",[t._v("webConsole => #{WEB_CONSOLE}")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("RegUnit")]),t._v(" 则是一个包含「正则匹配单元」和描述的对象，其中正则匹配单元将被替换到「询问句式」含标识符的位置，并被添加 "),a("code",[t._v("()")]),t._v(" 包裹（所以你不需要为可选符号的外部添加括号）。")])]),t._v(" "),a("h4",{attrs:{id:"desc-1-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#desc-1-3"}},[t._v("#")]),t._v(" "),a("code",[t._v("desc[1]")])]),t._v(" "),a("p",[t._v("你不需要为 "),a("code",[t._v("Enquire")]),t._v(" 类型配置 "),a("code",[t._v("desc[1]")]),t._v(" ，保留空字符串即可。")]),t._v(" "),a("h4",{attrs:{id:"enquirematchresult"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enquirematchresult"}},[t._v("#")]),t._v(" "),a("code",[t._v("EnquireMatchResult")])]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnquireMatchResult")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enquire"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    matchPair"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("Enqire")]),t._v(" 型指令，匹配成功后将返回给 "),a("code",[t._v("main")]),t._v(" 函数匹配到的所有「句式单元」表示的 "),a("code",[t._v("key")]),t._v(" 和获取的 "),a("code",[t._v("value")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"header-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("#{HEADER}")])]),t._v(" "),a("p",[t._v("这是一个保留标识符，表示用户在 "),a("code",[t._v("setting.yml")]),t._v(" 中配置的 "),a("code",[t._v("header")]),t._v(" 属性，你也可以在 "),a("code",[t._v("sentences")]),t._v(" 中直接使用它，无需定义。")]),t._v(" "),a("h4",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("上面的内容并不容易让人理解 "),a("code",[t._v("Enquire")]),t._v(" 指令的配置方法，下面将提供一个简单的实现 "),a("code",[t._v("Enquire")]),t._v(" 指令的例子。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" simpleSentence"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" EnquireConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enquire"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    cmdKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tools.test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    desc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"简单句"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    definedPair"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #{OBJ}")]),t._v("\n            regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\w+"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            senDesc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"宾语"')]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        sub"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #{SUB}")]),t._v("\n            regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I|you|he|she"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            senDesc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"主语"')]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pred"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #{PRED}")]),t._v("\n            regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"am|is|are"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            senDesc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"系动词"')]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        verb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #{VERB}")]),t._v("\n            regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\w+"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            senDesc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"动词"')]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        modalVerb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #{MODAL_VERB}")]),t._v("\n            regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"can|could|may|might"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            senDesc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"情态动词"')]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    sentences"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#{SUB} #{PRED} #{OBJ}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => /(I|you|he|she) (am|is|are) \\w+/i")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#{HEADER}#{MODAL_VERB} #{SUB} #{VERB} #{OBJ}"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => /#(can|could|may|might) (I|you|he|she) \\w+ \\w+/i")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在这个例子中，我们定义了五个「句式单元」，并通过它们写了两个简单的询问句式，备注中写出了它们的导出正则。了解了定义后，实现就非常简单了：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" InputParameter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@modules/command"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" InputParameter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matchResult "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * <= I am developer\n * => matchPair: { sub: "I", pred: "am", obj: "developer" }\n *\n * <= #Can you write code\n * => matchPair: {\n *        header: "#", modalVerb: "Can",\n *        sub: "you", verb: "write", obj: "code"\n *    }\n **/')]),t._v("\n")])])]),a("h2",{attrs:{id:"database"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#database"}},[t._v("#")]),t._v(" Database")]),t._v(" "),a("p",[a("code",[t._v("Adachi-BOT")]),t._v(" 使用了 "),a("code",[t._v("Redis")]),t._v(" 作为数据库并简单的封装了一些常用方法。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatabaseMethod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("keys"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKeysByPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Hash */")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("fields"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("incHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" increment"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("existHashKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* String */")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* List */")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getListLength")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addListElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delListElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("existListElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Set */")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSetMemberNum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSetMember")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delSetMember")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("existSetMember")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"common"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[t._v("#")]),t._v(" Common")]),t._v(" "),a("p",[t._v("通用方法。")]),t._v(" "),a("h4",{attrs:{id:"键名约定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键名约定"}},[t._v("#")]),t._v(" 键名约定")]),t._v(" "),a("p",[t._v("同 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#cmdkey",target:"_blank",rel:"noopener noreferrer"}},[t._v("cmdKey"),a("OutboundLink")],1),t._v(" ，简记为 "),a("code",[t._v("开发者.数据作用")]),t._v(" 或 "),a("code",[t._v("插件名.数据作用")]),t._v(" ，点号两侧均应使用 "),a("code",[t._v("kebab-case")]),t._v(" ，如："),a("code",[t._v("silvery-star.user-bind-id")]),t._v(" 。")]),t._v(" "),a("h4",{attrs:{id:"settimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#settimeout"}},[t._v("#")]),t._v(" "),a("code",[t._v("setTimeout")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/expire",target:"_blank",rel:"noopener noreferrer"}},[t._v("EXPIRE "),a("OutboundLink")],1),t._v("。设置数据过期时间。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("time")]),t._v(" 目标的过期时间，单位 ms")])]),t._v(" "),a("h4",{attrs:{id:"deletekey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deletekey"}},[t._v("#")]),t._v(" "),a("code",[t._v("deleteKey")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/del",target:"_blank",rel:"noopener noreferrer"}},[t._v("DEL "),a("OutboundLink")],1),t._v("。删除数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("...key")]),t._v(" 待删除的数据的键值，可多个")])]),t._v(" "),a("h4",{attrs:{id:"getkeysbyprefix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getkeysbyprefix"}},[t._v("#")]),t._v(" "),a("code",[t._v("getKeysByPrefix")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("KEYS "),a("OutboundLink")],1),t._v("。根据键值前缀获取数据库中满足条件的键的列表。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("prefix")]),t._v(" 在数据库中匹配的键值前缀")])]),t._v(" "),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" "),a("code",[t._v("String")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/redis/redis-strings.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("字符串 "),a("OutboundLink")],1),t._v("相关方法。")]),t._v(" "),a("h4",{attrs:{id:"setstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setstring"}},[t._v("#")]),t._v(" "),a("code",[t._v("setString")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/set",target:"_blank",rel:"noopener noreferrer"}},[t._v("SET "),a("OutboundLink")],1),t._v("。设置一个字符串类型的数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v(" 设置的值，通常可以是 "),a("code",[t._v("string")]),t._v("、"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Number",target:"_blank",rel:"noopener noreferrer"}},[t._v("number "),a("OutboundLink")],1),t._v("或 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean "),a("OutboundLink")],1),t._v("类型")]),t._v(" "),a("li",[a("code",[t._v("timeout")]),t._v(" 可选参数，数据过期时间，单位 ms ，默认不会过期")])]),t._v(" "),a("h4",{attrs:{id:"getstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getstring"}},[t._v("#")]),t._v(" "),a("code",[t._v("getString")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/get",target:"_blank",rel:"noopener noreferrer"}},[t._v("GET "),a("OutboundLink")],1),t._v("。获取一个字符串类型的数据。当键值不存在时，返回 "),a("code",[t._v('""')]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")])]),t._v(" "),a("h3",{attrs:{id:"hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" Hash")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/redis/redis-hashes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("哈希 "),a("OutboundLink")],1),t._v("相关方法。")]),t._v(" "),a("h4",{attrs:{id:"sethash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sethash"}},[t._v("#")]),t._v(" "),a("code",[t._v("setHash")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/hmset",target:"_blank",rel:"noopener noreferrer"}},[t._v("HMSET "),a("OutboundLink")],1),t._v("。设置一个 Hash 类型的数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("key")]),t._v(" 操作目标的键值")])]),t._v(" "),a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("value\n")])])]),a("p",[t._v("设置的值，可以为")]),t._v(" "),a("p",[t._v("Array")]),t._v(" "),a("p",[t._v("和")]),t._v(" "),a("p",[t._v("Object")]),t._v(" "),a("p",[t._v("两种类型：")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array")]),t._v(" 类型时，奇数位的元素为表示字段名的 "),a("code",[t._v("string")]),t._v(" 类型的值，偶数位表示前一个元素的字段对应的值，如："),a("code",[t._v('[ "k1", 1, "k2", "2" ]')])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object")]),t._v(" 类型时，传入一个对象，且它不应该嵌套数组或对象，如："),a("code",[t._v('{ k1: 1, k2: "2" }')])])])]),t._v(" "),a("h4",{attrs:{id:"gethash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gethash"}},[t._v("#")]),t._v(" "),a("code",[t._v("getHash")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/hgetall",target:"_blank",rel:"noopener noreferrer"}},[t._v("HGETALL "),a("OutboundLink")],1),t._v("。获取一个 Hash 类型数据的所有字段以及值，返回为 "),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#arrays",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object "),a("OutboundLink")],1),t._v("类型。当键值不存在时，返回 "),a("code",[t._v("{}")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")])]),t._v(" "),a("h4",{attrs:{id:"delhash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delhash"}},[t._v("#")]),t._v(" "),a("code",[t._v("delHash")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/hdel",target:"_blank",rel:"noopener noreferrer"}},[t._v("HDEL "),a("OutboundLink")],1),t._v("。删除一个 Hash 类型数据的部分字段。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("...fields")]),t._v(" 待删除的字段名，可多个")])]),t._v(" "),a("h4",{attrs:{id:"inchash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inchash"}},[t._v("#")]),t._v(" "),a("code",[t._v("incHash")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/hincrby",target:"_blank",rel:"noopener noreferrer"}},[t._v("HINCRBY "),a("OutboundLink")],1),t._v("及 "),a("a",{attrs:{href:"https://redis.io/commands/hincrbyfloat",target:"_blank",rel:"noopener noreferrer"}},[t._v("HINCRBYFLOAT "),a("OutboundLink")],1),t._v("。给一个 Hash 类型数据的某字段加上某值。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("field")]),t._v(" 待操作的字段名")]),t._v(" "),a("li",[a("code",[t._v("increment")]),t._v(" 添加的值，可为整形或浮点型")])]),t._v(" "),a("h4",{attrs:{id:"existhashkey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#existhashkey"}},[t._v("#")]),t._v(" "),a("code",[t._v("existHashKey")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/hexists",target:"_blank",rel:"noopener noreferrer"}},[t._v("HEXISTS "),a("OutboundLink")],1),t._v("。判断一个 Hash 类型数据中是否包含某字段。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("field")]),t._v(" 带判断的字段名")])]),t._v(" "),a("h3",{attrs:{id:"list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/redis/redis-lists.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("列表 "),a("OutboundLink")],1),t._v("相关方法。")]),t._v(" "),a("h4",{attrs:{id:"getlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getlist"}},[t._v("#")]),t._v(" "),a("code",[t._v("getList")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/lrange",target:"_blank",rel:"noopener noreferrer"}},[t._v("LRANGE "),a("OutboundLink")],1),t._v("。获取一个完整的 List 类型数据。当键值不存在时，返回 "),a("code",[t._v("[]")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")])]),t._v(" "),a("h4",{attrs:{id:"getlistlength"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getlistlength"}},[t._v("#")]),t._v(" "),a("code",[t._v("getListLength")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/llen",target:"_blank",rel:"noopener noreferrer"}},[t._v("LLEN "),a("OutboundLink")],1),t._v("。获取一个 List 类型数据的长度。当键值不存在时，返回 "),a("code",[t._v("0")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")])]),t._v(" "),a("h4",{attrs:{id:"addlistelement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addlistelement"}},[t._v("#")]),t._v(" "),a("code",[t._v("addListElement")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/rpush",target:"_blank",rel:"noopener noreferrer"}},[t._v("RPUSH "),a("OutboundLink")],1),t._v("。向一个 List 类型数据中添加若干数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("...values")]),t._v(" 待添加的数据，可多个")])]),t._v(" "),a("h4",{attrs:{id:"dellistelement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dellistelement"}},[t._v("#")]),t._v(" "),a("code",[t._v("delListElement")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/lrem",target:"_blank",rel:"noopener noreferrer"}},[t._v("LREM "),a("OutboundLink")],1),t._v("。从一个 List 类型数据中删除若干数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("...values")]),t._v(" 待删除的数据，可多个")])]),t._v(" "),a("h4",{attrs:{id:"existlistelement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#existlistelement"}},[t._v("#")]),t._v(" "),a("code",[t._v("existListElement")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("判断一个 List 类型数据中是否包含某数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v(" 待判断的数据")])]),t._v(" "),a("h3",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/redis/redis-sets.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("集合 "),a("OutboundLink")],1),t._v("相关方法。")]),t._v(" "),a("h4",{attrs:{id:"getset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getset"}},[t._v("#")]),t._v(" "),a("code",[t._v("getSet")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/smembers",target:"_blank",rel:"noopener noreferrer"}},[t._v("SMEMBERS "),a("OutboundLink")],1),t._v("。获取一个 Set 类型数据。当键值不存在时，返回 "),a("code",[t._v("[]")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")])]),t._v(" "),a("h4",{attrs:{id:"getsetmembernum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getsetmembernum"}},[t._v("#")]),t._v(" "),a("code",[t._v("getSetMemberNum")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/scard",target:"_blank",rel:"noopener noreferrer"}},[t._v("SCARD "),a("OutboundLink")],1),t._v("。获取一个 Set 类型数据中含有的成员的数量。当键值不存在时，返回 "),a("code",[t._v("0")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")])]),t._v(" "),a("h4",{attrs:{id:"addsetmember"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addsetmember"}},[t._v("#")]),t._v(" "),a("code",[t._v("addSetMember")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/sadd",target:"_blank",rel:"noopener noreferrer"}},[t._v("SADD "),a("OutboundLink")],1),t._v("。向一个 Set 类型数据中添加若干数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("...values")]),t._v(" 待添加的数据，可多个")])]),t._v(" "),a("h4",{attrs:{id:"delsetmember"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delsetmember"}},[t._v("#")]),t._v(" "),a("code",[t._v("delSetMember")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/srem",target:"_blank",rel:"noopener noreferrer"}},[t._v("SREN "),a("OutboundLink")],1),t._v("。从一个 Set 类型数据中删除若干数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("...values")]),t._v(" 待删除的数据，可多个")])]),t._v(" "),a("h4",{attrs:{id:"existsetmember"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#existsetmember"}},[t._v("#")]),t._v(" "),a("code",[t._v("existSetMember")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("原型 "),a("a",{attrs:{href:"https://redis.io/commands/sismember",target:"_blank",rel:"noopener noreferrer"}},[t._v("SISMEMBER "),a("OutboundLink")],1),t._v("。判断一个 Set 类型数据中是否包含某数据。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("key")]),t._v(" 操作目标的键值")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v(" 待判断的数据")])]),t._v(" "),a("h3",{attrs:{id:"client"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#client"}},[t._v("#")]),t._v(" client")]),t._v(" "),a("p",[t._v("如果上面的方法不足以实现你的需求，可以使用 "),a("code",[t._v("client")]),t._v(" 获取数据库实例对象。")]),t._v(" "),a("h2",{attrs:{id:"botconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#botconfig"}},[t._v("#")]),t._v(" BotConfig")]),t._v(" "),a("p",[a("code",[t._v("setting.yml")]),t._v(" 内的配置数据，详见"),a("a",{attrs:{href:"https://docs.adachi.top/config/",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"filemanagement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filemanagement"}},[t._v("#")]),t._v(" FileManagement")]),t._v(" "),a("p",[t._v("一套简单封装的文件管理方法。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PresetPlace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ManagementMethod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Common")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isExist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFilePath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// File")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("renameFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" fileName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" fileName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dir")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" dirName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirFiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" dirName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// YAML")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createYAML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ymlName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadYAML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ymlName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeYAML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ymlName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateYAML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ymlName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"presetplace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#presetplace"}},[t._v("#")]),t._v(" PresetPlace")]),t._v(" "),a("p",[t._v("表示用于定位目录的位置")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("root")]),t._v(" 表示 "),a("code",[t._v("Adachi-BOT")])]),t._v(" "),a("li",[a("code",[t._v("config")]),t._v(" 表示 "),a("code",[t._v("Adachi-BOT/config")]),t._v(" ，所有方法默认情况下都为此值")]),t._v(" "),a("li",[a("code",[t._v("plugin")]),t._v(" 表示 "),a("code",[t._v("Adachi-BOT/src/plugins")])])]),t._v(" "),a("h3",{attrs:{id:"common-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-2"}},[t._v("#")]),t._v(" Common")]),t._v(" "),a("h4",{attrs:{id:"isexist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isexist"}},[t._v("#")]),t._v(" "),a("code",[t._v("isExist")])]),t._v(" "),a("p",[t._v("判断某文件/目录是否存在，必须传入完整的路径（绝对路径）。")]),t._v(" "),a("h4",{attrs:{id:"getfilepath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getfilepath"}},[t._v("#")]),t._v(" "),a("code",[t._v("getFilePath")])]),t._v(" "),a("p",[t._v("根据相对路径获取绝对路径。")]),t._v(" "),a("h3",{attrs:{id:"file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[t._v("#")]),t._v(" File")]),t._v(" "),a("h4",{attrs:{id:"renamefile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renamefile"}},[t._v("#")]),t._v(" "),a("code",[t._v("renameFile")])]),t._v(" "),a("p",[t._v("更名文件，"),a("code",[t._v("fileName")]),t._v(" 和 "),a("code",[t._v("newName")]),t._v(" 均应为相对路径形式。")]),t._v(" "),a("h4",{attrs:{id:"readfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readfile"}},[t._v("#")]),t._v(" "),a("code",[t._v("readFile")])]),t._v(" "),a("p",[t._v("读取文件内容。")]),t._v(" "),a("h3",{attrs:{id:"directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#directory"}},[t._v("#")]),t._v(" Directory")]),t._v(" "),a("h4",{attrs:{id:"createdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createdir"}},[t._v("#")]),t._v(" "),a("code",[t._v("createDir")])]),t._v(" "),a("p",[t._v("创建目录。")]),t._v(" "),a("h4",{attrs:{id:"getdirfiles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdirfiles"}},[t._v("#")]),t._v(" "),a("code",[t._v("getDirFiles")])]),t._v(" "),a("p",[t._v("获取一个目录下的所有子级文件名。")]),t._v(" "),a("h3",{attrs:{id:"yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml"}},[t._v("#")]),t._v(" YAML")]),t._v(" "),a("h4",{attrs:{id:"createyaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createyaml"}},[t._v("#")]),t._v(" "),a("code",[t._v("createYAML")])]),t._v(" "),a("p",[t._v("创建 YAML 文件，并以 "),a("code",[t._v("data")]),t._v(" 作为写入数据。")]),t._v(" "),a("h4",{attrs:{id:"loadyaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loadyaml"}},[t._v("#")]),t._v(" "),a("code",[t._v("loadYAML")])]),t._v(" "),a("p",[t._v("读取 YAML 文件，返回 "),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#arrays",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object "),a("OutboundLink")],1),t._v("类型数据。")]),t._v(" "),a("h4",{attrs:{id:"writeyaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writeyaml"}},[t._v("#")]),t._v(" "),a("code",[t._v("writeYAML")])]),t._v(" "),a("p",[t._v("覆盖写入 YAML 文件。")]),t._v(" "),a("h4",{attrs:{id:"updateyaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updateyaml"}},[t._v("#")]),t._v(" "),a("code",[t._v("updateYAML")])]),t._v(" "),a("p",[t._v("更新 YAML 文件。"),a("code",[t._v("index")]),t._v(" 作为数据索引，将索引到的位置修改为 "),a("code",[t._v("data")]),t._v(" 。")]),t._v(" "),a("h2",{attrs:{id:"authorization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#authorization"}},[t._v("#")]),t._v(" Authorization")]),t._v(" "),a("p",[t._v("权限管理方法。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthorizationMethod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" userID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AuthLevel "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" userID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AuthLevel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" userID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AuthLevel "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"msgmanagement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#msgmanagement"}},[t._v("#")]),t._v(" MsgManagement")]),t._v(" "),a("p",[t._v("获取发送消息的方法回调")]),t._v(" "),a("p",[a("code",[t._v("getPrivateSendFunc")]),t._v("：发送主动推送私信的方法（主动发送私聊消息用）")]),t._v(" "),a("p",[a("code",[t._v("sendPrivateMessage")]),t._v("：发送私聊信息方法（被动回复私聊消息用）")]),t._v(" "),a("p",[a("code",[t._v("sendGuildMessage")]),t._v("：发送频道信息方法（被动回复频道消息用）")]),t._v(" "),a("p",[t._v("如果消息体中不含有"),a("code",[t._v("msg_id")]),t._v("字段则认为是主动推送消息")]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v('sendGuildMessage( "channelID");')]),t._v("则是向子频道推送消息（待测试）")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MsgManagementMethod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSendPrivateFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" guildId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SendFunc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSendMasterFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" msgId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SendFunc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendPrivateMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" guildId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msgId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SendFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendGuildMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" channelId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msgId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SendFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"refreshconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refreshconfig"}},[t._v("#")]),t._v(" RefreshConfig")]),t._v(" "),a("p",[t._v("可热更新的配置文件类，用于定义配置文件的热更新方法。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RefreshCatch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RefreshTarget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("refresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RefreshConfigMethod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerRefreshableFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n        fileName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RefreshTarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" place"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PresetPlace \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerRefreshableFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RefreshTarget "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"refreshcatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refreshcatch"}},[t._v("#")]),t._v(" "),a("code",[t._v("RefreshCatch")])]),t._v(" "),a("p",[t._v("刷新时错误返回类型。在出现错误时需 "),a("code",[t._v("throw")]),t._v(" 一个该类型的对象。")]),t._v(" "),a("h3",{attrs:{id:"refreshtarget"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refreshtarget"}},[t._v("#")]),t._v(" "),a("code",[t._v("RefreshTarget")])]),t._v(" "),a("p",[t._v("配置文件类。我们要求你使用类来定义配置文件，且类中必须包含返回值为 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"}},[t._v("Promise "),a("OutboundLink")],1),t._v("的公有函数 "),a("code",[t._v("refresh")]),t._v(" 。下面以 "),a("code",[t._v("Cookies")]),t._v(" 为例，介绍书写的格式：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookies")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" cookies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" init "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tindex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tcookies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"米游社信息公共查询Cookies(允许设置多个)"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("refresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cookies 重新加载完毕"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" error "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RefreshCatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("error "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\tmsg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cookies 重新加载失败，请前往控制台查看日志"')]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"registerrefreshablefile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#registerrefreshablefile"}},[t._v("#")]),t._v(" "),a("code",[t._v("registerRefreshableFile")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("注册一个可刷新的配置文件，当 BOT 持有者使用 "),a("code",[t._v("adachi.refresh")]),t._v(" 指令时，重新读取所有被注册的文件。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("fileName")]),t._v(" 注册的配置文件的文件名")]),t._v(" "),a("li",[a("code",[t._v("target")]),t._v(" 实现 "),a("code",[t._v("RefreshTarget")]),t._v(" 接口的类的实例对象，如 "),a("code",[t._v("new Cookies()")])]),t._v(" "),a("li",[a("code",[t._v("place")]),t._v(" 可选参数，见 "),a("a",{attrs:{href:"https://docs.adachi.top/developer/#presetplace",target:"_blank",rel:"noopener noreferrer"}},[t._v("PresetPlace"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"registerrefreshablefunc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#registerrefreshablefunc"}},[t._v("#")]),t._v(" "),a("code",[t._v("registerRefreshableFunc")])]),t._v(" "),a("p",[a("strong",[t._v("作用")])]),t._v(" "),a("p",[t._v("注册一个可刷新的对象，当 BOT 持有者使用 "),a("code",[t._v("adachi.refresh")]),t._v(" 指令时，重新加载该对象。")]),t._v(" "),a("p",[a("strong",[t._v("参数列表")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("target")]),t._v(" 实现 "),a("code",[t._v("RefreshTarget")]),t._v(" 接口的类的实例对象，如 "),a("code",[t._v("new Cookies()")])])]),t._v(" "),a("h2",{attrs:{id:"path-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path-alias"}},[t._v("#")]),t._v(" Path Alias")]),t._v(" "),a("p",[a("code",[t._v("Adachi-BOT")]),t._v(" 设有三个路径别名")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@")]),t._v(" -> "),a("code",[t._v("./src/")])]),t._v(" "),a("li",[a("code",[t._v("#")]),t._v(" -> "),a("code",[t._v("./src/plugins/")])]),t._v(" "),a("li",[a("code",[t._v("ROOT")]),t._v(" -> "),a("code",[t._v("app.ts")])])]),t._v(" "),a("p",[t._v("导入路径名应尽可能简洁，并尽量避免多层 "),a("code",[t._v("../")]),t._v(" 的出现。对于文件 "),a("code",[t._v("A.ts")]),t._v(" ：")]),t._v(" "),a("ul",[a("li",[t._v("若 "),a("code",[t._v("B.ts")]),t._v(" 与 "),a("code",[t._v("A.ts")]),t._v(" 处于同级目录或 "),a("code",[t._v("B.ts")]),t._v(" 在 "),a("code",[t._v("A.ts")]),t._v(" 的同级文件夹的子级目录中，则应该使用 "),a("code",[t._v("./")]),t._v(" 来引用")]),t._v(" "),a("li",[t._v("若 "),a("code",[t._v("B.ts")]),t._v(" 在 "),a("code",[t._v("A.ts")]),t._v(" 的祖级目录中，则应该使用 "),a("code",[t._v("@")]),t._v(" 或 "),a("code",[t._v("#")]),t._v(" 来引用")])])])}),[],!1,null,null,null);s.default=n.exports}}]);